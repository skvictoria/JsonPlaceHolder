apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

androidExtensions{
    experimental = true
}

def getProperty(String fileName, String propName){
    def file = rootProject.file(fileName)

    if (file.exists()){
        def props = new Properties()
        props.load(new FileInputStream(file))

        if(props[propName]!= null){
            return props[propName]
        }else {
            print("No such property" + propName + "in file" + fileName)
        }

    }else{
        print(fileName+"does not exist")
    }
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    dataBinding{
        enabled = true
    }
    defaultConfig {
        applicationId "com.example.newproject0112"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0-alpha05"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    //moshi
    implementation "com.squareup.moshi:moshi:$moshi_version"

    //dagger2
    implementation "com.google.dagger:dagger:$dagger2_version"
    implementation "com.google.dagger:dagger-android:$dagger2_version"
    implementation "com.google.dagger:dagger-android-support:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger2_version"

    //Rx
    implementation "io.reactivex.rxjava2:rxjava:2.2.10"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    //RecyclerView
    implementation "androidx.recyclerview:recyclerview:1.1.0-beta04"

    // Android lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.core:core-ktx:1.1.0"
    implementation "androidx.fragment:fragment-ktx:1.1.0"

    //constraintlayout
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Leak Canary

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"

    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"

    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$leakcanary_version"



    // Timber

    implementation "com.jakewharton.timber:timber:$timber_version"



    // threeten

    implementation "com.jakewharton.threetenabp:threetenabp:1.2.1"



    // Stetho

    implementation "com.facebook.stetho:stetho:$stetho_version"

    implementation "com.facebook.stetho:stetho-okhttp3:$stetho_version"



    // Fresco

    implementation "com.facebook.fresco:fresco:$fresco_version"

    implementation "com.facebook.fresco:animated-webp:$fresco_version"

    implementation "com.facebook.fresco:webpsupport:$fresco_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}
